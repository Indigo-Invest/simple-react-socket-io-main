{"ast":null,"code":"import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\n\nfunction empty() {}\n\nexport class BaseXHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @package\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n    }\n  }\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @private\n   */\n\n\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", (xhrStatus, context) => {\n      this.onError(\"xhr post error\", xhrStatus, context);\n    });\n  }\n  /**\n   * Starts a poll cycle.\n   *\n   * @private\n   */\n\n\n  doPoll() {\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", (xhrStatus, context) => {\n      this.onError(\"xhr poll error\", xhrStatus, context);\n    });\n    this.pollXhr = req;\n  }\n\n}\nexport class Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @package\n   */\n  constructor(createRequest, uri, opts) {\n    super();\n    this.createRequest = createRequest;\n    installTimerFunctions(this, opts);\n    this._opts = opts;\n    this._method = opts.method || \"GET\";\n    this._uri = uri;\n    this._data = undefined !== opts.data ? opts.data : null;\n\n    this._create();\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @private\n   */\n\n\n  _create() {\n    var _a;\n\n    const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n    opts.xdomain = !!this._opts.xd;\n    const xhr = this._xhr = this.createRequest(opts);\n\n    try {\n      xhr.open(this._method, this._uri, true);\n\n      try {\n        if (this._opts.extraHeaders) {\n          // @ts-ignore\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n          for (let i in this._opts.extraHeaders) {\n            if (this._opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this._method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr); // ie6 check\n\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this._opts.withCredentials;\n      }\n\n      if (this._opts.requestTimeout) {\n        xhr.timeout = this._opts.requestTimeout;\n      }\n\n      xhr.onreadystatechange = () => {\n        var _a;\n\n        if (xhr.readyState === 3) {\n          (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies( // @ts-ignore\n          xhr.getResponseHeader(\"set-cookie\"));\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          this._onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          this.setTimeoutFn(() => {\n            this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n          }, 0);\n        }\n      };\n\n      xhr.send(this._data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      this.setTimeoutFn(() => {\n        this._onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this._index = Request.requestsCount++;\n      Request.requests[this._index] = this;\n    }\n  }\n  /**\n   * Called upon error.\n   *\n   * @private\n   */\n\n\n  _onError(err) {\n    this.emitReserved(\"error\", err, this._xhr);\n\n    this._cleanup(true);\n  }\n  /**\n   * Cleans up house.\n   *\n   * @private\n   */\n\n\n  _cleanup(fromError) {\n    if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n      return;\n    }\n\n    this._xhr.onreadystatechange = empty;\n\n    if (fromError) {\n      try {\n        this._xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this._index];\n    }\n\n    this._xhr = null;\n  }\n  /**\n   * Called upon load.\n   *\n   * @private\n   */\n\n\n  _onLoad() {\n    const data = this._xhr.responseText;\n\n    if (data !== null) {\n      this.emitReserved(\"data\", data);\n      this.emitReserved(\"success\");\n\n      this._cleanup();\n    }\n  }\n  /**\n   * Aborts the request.\n   *\n   * @package\n   */\n\n\n  abort() {\n    this._cleanup();\n  }\n\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nconst hasXHR2 = function () {\n  const xhr = newRequest({\n    xdomain: false\n  });\n  return xhr && xhr.responseType !== null;\n}();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\n\n\nexport class XHR extends BaseXHR {\n  constructor(opts) {\n    super(opts);\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Object.assign(opts, {\n      xd: this.xd\n    }, this.opts);\n    return new Request(newRequest, this.uri(), opts);\n  }\n\n}\n\nfunction newRequest(opts) {\n  const xdomain = opts.xdomain; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n    } catch (e) {}\n  }\n}","map":{"version":3,"sources":["c:/2025/20250425-simple-react-socket-io/simple-react-socket-io-main/react-client/node_modules/engine.io-client/build/esm/transports/polling-xhr.js"],"names":["Polling","Emitter","installTimerFunctions","pick","globalThisShim","globalThis","hasCORS","empty","BaseXHR","constructor","opts","location","isSSL","protocol","port","xd","hostname","doWrite","data","fn","req","request","method","on","xhrStatus","context","onError","doPoll","onData","bind","pollXhr","Request","createRequest","uri","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","readyState","parseCookies","getResponseHeader","status","_onLoad","setTimeoutFn","_onError","send","document","_index","requestsCount","requests","err","emitReserved","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","hasXHR2","newRequest","responseType","XHR","forceBase64","supportsBinary","Object","assign","XMLHttpRequest","concat","join"],"mappings":"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","sourcesContent":["import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}